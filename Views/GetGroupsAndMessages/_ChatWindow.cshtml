@model IEnumerable<dynamic>
<style>
    /* Reset default styles */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
        background-color: #ffffff;
        color: #000000;
        line-height: 1.5;
    }

    p {
        min-width: 40;
    }
    /* Chat container */
    .chat-container {
        max-width: 600px;
        margin: 20px auto;
        padding: 20px;
        overflow-y: auto;
    }

    /* Message container */
    .message-container {
        display: flex;
        align-items: flex-end;
        margin-bottom: 16px;
    }

        /* Sent message alignment */
        .message-container.sent {
            flex-direction: row-reverse;
        }

    /* Avatar styling */
    .avatar-wrapper {
        position: relative;
        z-index: 2;
        padding: 4px;
        background-color: white;
        background-image: url('https://static.vecteezy.com/system/resources/thumbnails/005/358/204/small/background-with-letter-pattern-envelope-email-vector.jpg');
        border-radius: 50%;
        width: 40px;
        height: 40px;
    }

    .sent .avatar-wrapper {
        margin-left: -20px;
    }

    .received .avatar-wrapper {
        margin-right: -20px;
    }

    .avatar-image {
        width: 100%;
        height: 100%;
        border-radius: 50%;
        object-fit: cover;
    }

    /* Message content */
    .message-content {
        display: flex;
        flex-direction: column;
        gap: 4px;
        max-width: 80%;
    }

    .sent .message-content {
        align-items: flex-end;
    }

    .received .message-content {
        align-items: flex-start;
    }

    /* Message bubble */
    .message-bubble {
        padding: 8px 16px;
        border-radius: 10px;
        position: relative;
        max-width: 100%;
        /* Ensure long text breaks inside the bubble */
        word-wrap: break-word;
        overflow-wrap: break-word;
        word-break: break-all;
    }

    .sent .message-bubble {
        background-color: #6D5AE6;
        color: white;
    }

    .received .message-bubble {
        background-color: #f3f4f6;
        color: #111827;
    }

    .message-bubble p {
        font-size: 14px;
        margin: 0;
        /* Allow text wrapping */
        white-space: normal;
        word-wrap: break-word;
        overflow-wrap: break-word;
        word-break: break-all;
    }

    /* Timestamp */
    .timestamp {
        font-size: 12px;
        color: #6b7280;
    }

    .sent .timestamp {
        margin-right: 20px;
    }

    .received .timestamp {
        margin-left: 20px;
    }


    /* Input area styling */
    #input-container {
        display: flex;
        gap: 10px;
        margin: 10px;
    }

    #message-input {
        flex-grow: 1;
        border: 1px solid #ccc;
        padding: 10px;
        font-size: 14px;
        margin-left: 3px;
    }

    #send-button {
        padding: 10px 20px;
        background-color: #665dfe;
        color: white;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s;
        font-size: 14px;
        margin-right: 3px;
    }

        #send-button:hover {
            background-color: #5b56b7;
        }

    /* Chat window wrapper */
    .chat-window-wrapper {
        height: 100%; /* Controlled by your three-column layout */
    }

    /* Outer chat window container */
    #chat-window-inner {
        display: flex;
        flex-direction: column;
        /*         background-color: black; */
        border: 1px solid #ddd;
        padding: 0;
        height: 100vh;
    }

    /* Messages container */
    #messages-container {
        flex-grow: 1;
        overflow-y: scroll;
        padding: 10px;
        background-color: #fff;
        scrollbar-width: none; /* Firefox */
        -ms-overflow-style: none; /* IE 10+ */
    }

        #messages-container::-webkit-scrollbar {
            display: none;
        }

    #messages-container {
        /* Base background color similar to WhatsApp chat background */
        background-color: #e5ddd5;
        /* Add a subtle texture overlay */
        background-image: url('https://static.vecteezy.com/system/resources/thumbnails/005/358/204/small/background-with-letter-pattern-envelope-email-vector.jpg');
        background-repeat: repeat;
        background-size: auto;
    }



</style>




<div class="chat-window-wrapper">
    <div id="chat-window-inner" class="chat-container1">
        <div id="messages-container" data-current-user="@User.Identity.Name">
            @foreach (var message in Model)
            {
                <div class="message-container @(message.IsCurrentUser ? "sent" : "received")">
                    <div class="avatar-wrapper">
                        <img src="@(message.ProfilePic ?? "https://thumbs.dreamstime.com/b/default-avatar-profile-icon-vector-social-media-user-image-182145777.jpg")" alt="@message.Sender" class="avatar-image" />
                    </div>
                    <div class="message-content">

                        <div class="message-bubble">
                            @*                                 <div class="message-header">
                        @message.Sender
                        </div> *@
                            <p>@message.Content</p>
                        </div>
                        <span class="timestamp">@message.Timestamp.ToString("hh:mm tt")</span>
                    </div>
                </div>
            }
        </div>

        <div id="input-container">
            <input type="text"
                   id="message-input"
                   placeholder="Type a message..."
                   autocomplete="off" />
            <button id="send-button" onclick="sendMessage()">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M22 2L11 13M22 2l-7 20-4-9-9-4 20-7z" />
                </svg>
            </button>
        </div>
    </div>
    <script>
        window.onload = function () {
            // Ensure the element exists
            const container = document.getElementById("messages-container");
            if (container) {
                container.scrollTop = container.scrollHeight;
            }

            // Set up event listener for the group button
            const groupButton = document.getElementById("group-button");
            if (groupButton) {
                groupButton.addEventListener("click", function () {
                    console.log("hello");
                    if (container) {
                        container.scrollTop = container.scrollHeight;
                    }
                });
            }
        };
    </script>
</div>


<script src="~/js/ChatWindow.js"></script>
<script src="~/js/GetGroupsAndMessages.js"></script>







